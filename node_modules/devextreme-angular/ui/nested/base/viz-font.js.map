{"version":3,"file":"viz-font.js","sourceRoot":"","sources":["viz-font.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;GAWG;;;;;;;AAEH,8BAA6B,6BAA6B,CAAC,CAAA;AAE3D;IAAyC,8BAAY;IAArD;QAAyC,8BAAY;IAmCrD,CAAC;IAlCG,sBAAI,6BAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC;aACD,UAAU,KAAU;YAChB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACpC,CAAC;;;OAHA;IAKD,sBAAI,8BAAM;aAAV;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;aACD,UAAW,KAAU;YACjB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC;;;OAHA;IAKD,sBAAI,+BAAO;aAAX;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;aACD,UAAY,KAAU;YAClB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC;;;OAHA;IAKD,sBAAI,4BAAI;aAAR;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;aACD,UAAS,KAAU;YACf,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACnC,CAAC;;;OAHA;IAKD,sBAAI,8BAAM;aAAV;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;aACD,UAAW,KAAU;YACjB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC;;;OAHA;IAIL,iBAAC;AAAD,CAAC,AAnCD,CAAyC,4BAAY,GAmCpD;AAnCqB,kBAAU,aAmC/B,CAAA","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.1.7\n * Build date: Wed Oct 04 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport { NestedOption } from '../../../core/nested-option';\n\nexport abstract class DxoVizFont extends NestedOption {\n    get color() {\n        return this._getOption('color');\n    }\n    set color(value: any) {\n        this._setOption('color', value);\n    }\n\n    get family() {\n        return this._getOption('family');\n    }\n    set family(value: any) {\n        this._setOption('family', value);\n    }\n\n    get opacity() {\n        return this._getOption('opacity');\n    }\n    set opacity(value: any) {\n        this._setOption('opacity', value);\n    }\n\n    get size() {\n        return this._getOption('size');\n    }\n    set size(value: any) {\n        this._setOption('size', value);\n    }\n\n    get weight() {\n        return this._getOption('weight');\n    }\n    set weight(value: any) {\n        this._setOption('weight', value);\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
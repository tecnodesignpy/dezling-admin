{"version":3,"file":"events-strategy.js","sourceRoot":"","sources":["events-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.1.7\n * Build date: Wed Oct 04 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport { EventEmitter, NgZone } from '@angular/core';\r\nimport { DxComponent } from './component';\r\n\r\nconst dxToNgEventNames = {};\r\n\r\ninterface IEventSubscription {\r\n    handler: any;\r\n    unsubscribe: () => void;\r\n}\r\n\r\nexport class NgEventsStrategy {\r\n    private subscriptions: { [key: string]: IEventSubscription[] } = {};\r\n\r\n    constructor(private component: DxComponent, private ngZone: NgZone) { }\r\n\r\n    hasEvent(name: string) {\r\n        return this.getEmitter(name).observers.length;\r\n    }\r\n\r\n    fireEvent(name, args) {\r\n        this.ngZone.run(() => {\r\n            this.getEmitter(name).next(args && args[0]);\r\n        });\r\n    }\r\n\r\n    on(name, handler) {\r\n        let eventSubscriptions = this.subscriptions[name] || [],\r\n            subcription = this.getEmitter(name).subscribe(handler.bind(this.component.instance)),\r\n            unsubscribe = subcription.unsubscribe.bind(subcription);\r\n\r\n        eventSubscriptions.push({ handler, unsubscribe });\r\n        this.subscriptions[name] = eventSubscriptions;\r\n    }\r\n\r\n    off(name, handler) {\r\n        let eventSubscriptions = this.subscriptions[name] || [];\r\n\r\n        if (handler) {\r\n            eventSubscriptions.some((subscription, i) => {\r\n                if (subscription.handler === handler) {\r\n                    subscription.unsubscribe();\r\n                    eventSubscriptions.splice(i, 1);\r\n                    return true;\r\n                }\r\n            });\r\n        } else {\r\n            eventSubscriptions.forEach(subscription => {\r\n                subscription.unsubscribe();\r\n            });\r\n            eventSubscriptions.splice(0, eventSubscriptions.length);\r\n        }\r\n    }\r\n\r\n    dispose() {}\r\n\r\n    private getEmitter(eventName: string): EventEmitter<any> {\r\n        let ngEventName = dxToNgEventNames[eventName];\r\n        if (!this.component[ngEventName]) {\r\n            this.component[ngEventName] = new EventEmitter();\r\n        }\r\n        return this.component[ngEventName];\r\n    }\r\n}\r\n\r\ninterface IRememberedEvent {\r\n    name: string;\r\n    context: EmitterHelper;\r\n}\r\n\r\nlet events: IRememberedEvent[] = [];\r\nlet onStableSubscription: IEventSubscription = null;\r\n\r\nlet createOnStableSubscription = function(ngZone: NgZone, fireNgEvent: Function) {\r\n    if (onStableSubscription) {\r\n        return;\r\n    }\r\n\r\n    onStableSubscription = ngZone.onStable.subscribe(function() {\r\n        onStableSubscription.unsubscribe();\r\n        onStableSubscription = null;\r\n\r\n        ngZone.run(() => {\r\n            events.forEach(event => {\r\n                let value = event.context.component[event.name];\r\n\r\n                fireNgEvent.call(event.context, event.name + 'Change', [value]);\r\n            });\r\n        });\r\n\r\n        events = [];\r\n    });\r\n};\r\n\r\nexport class EmitterHelper {\r\n    strategy: NgEventsStrategy;\r\n\r\n    constructor(ngZone: NgZone, public component: DxComponent) {\r\n        this.strategy = new NgEventsStrategy(component, ngZone);\r\n        createOnStableSubscription(ngZone, this.fireNgEvent);\r\n    }\r\n    fireNgEvent(eventName: string, eventArgs: any) {\r\n        let emitter = this.component[eventName];\r\n        if (emitter) {\r\n            emitter.next(eventArgs && eventArgs[0]);\r\n        }\r\n    }\r\n    createEmitter(ngEventName: string, dxEventName: string) {\r\n        this.component[ngEventName] = new EventEmitter();\r\n        if (dxEventName) {\r\n            dxToNgEventNames[dxEventName] = ngEventName;\r\n        }\r\n    }\r\n    rememberEvent(name: string) {\r\n        events.push({ name: name, context: this });\r\n    }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}